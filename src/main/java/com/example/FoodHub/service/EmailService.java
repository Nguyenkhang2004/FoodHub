package com.example.FoodHub.service;

import com.example.FoodHub.dto.response.InvoiceResponse;
import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;

import java.text.DecimalFormat;
import java.time.Instant;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

@Slf4j
@Service
public class EmailService {

    @Autowired
    private JavaMailSender mailSender;

    public void sendWelcomeEmail(String to, String username, String password) throws MessagingException {
        MimeMessage message = mailSender.createMimeMessage();
        MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

        helper.setTo(to);
        helper.setSubject("Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi FOODHUB!");

        String htmlContent = buildWelcomeEmailTemplate(username, password);
        helper.setText(htmlContent, true);

        mailSender.send(message);
    }

    @Async
    public void sendWelcomeEmailAsync(String to, String username, String password) {
        try {
            log.info("B·∫Øt ƒë·∫ßu g·ª≠i email ch√†o m·ª´ng ƒë·∫øn {} t·∫°i {}", to, Instant.now());
            sendWelcomeEmail(to, username, password);
            log.info("K·∫øt th√∫c g·ª≠i email ch√†o m·ª´ng ƒë·∫øn {} t·∫°i {}", to, Instant.now());
        } catch (MessagingException e) {
            log.error("L·ªói khi g·ª≠i email ch√†o m·ª´ng ƒë·∫øn {}: {}", to, e.getMessage());
        }
    }

    public void sendOtpEmail(String to, String otp) throws MessagingException {
        MimeMessage message = mailSender.createMimeMessage();
        MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

        helper.setTo(to);
        helper.setSubject("M√£ OTP x√°c th·ª±c t√†i kho·∫£n FOODHUB");

        String htmlContent = buildOtpEmailTemplate(otp);
        helper.setText(htmlContent, true);

        mailSender.send(message);
    }

    @Async
    public void sendOtpEmailAsync(String to, String otp) {
        try {
            log.info("B·∫Øt ƒë·∫ßu g·ª≠i email OTP ƒë·∫øn {} t·∫°i {}", to, Instant.now());
            sendOtpEmail(to, otp);
            log.info("K·∫øt th√∫c g·ª≠i email OTP ƒë·∫øn {} t·∫°i {}", to, Instant.now());
        } catch (MessagingException e) {
            log.error("L·ªói khi g·ª≠i email OTP ƒë·∫øn {}: {}", to, e.getMessage());
        }
    }

    private String buildWelcomeEmailTemplate(String username, String password) {
        return "<!DOCTYPE html>" +
                "<html lang=\"vi\">" +
                "<head>" +
                "<meta charset=\"UTF-8\">" +
                "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">" +
                "<title>Ch√†o m·ª´ng ƒë·∫øn v·ªõi FOODHUB</title>" +
                "<style>" +
                "* { margin: 0; padding: 0; box-sizing: border-box; }" +
                "body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background-color: #f8f9fa; color: #333; line-height: 1.6; }" +
                ".email-container { max-width: 600px; margin: 0 auto; background-color: #ffffff; border-radius: 12px; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); overflow: hidden; }" +
                ".header { background: linear-gradient(135deg, #02052f, #D4A017); color: white; padding: 40px 20px; text-align: center; position: relative; }" +
                ".header::before { content: 'üçΩÔ∏è'; font-size: 48px; display: block; margin-bottom: 15px; }" +
                ".header h1 { font-size: 28px; font-weight: 700; margin-bottom: 10px; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); }" +
                ".header p { font-size: 16px; opacity: 0.9; }" +
                ".content { padding: 40px 30px; }" +
                ".welcome-message { font-size: 18px; color: #2c3e50; margin-bottom: 30px; text-align: center; }" +
                ".credentials-box { background: linear-gradient(135deg, #f8f9fa, #e9ecef); border-left: 4px solid #D4A017; border-radius: 8px; padding: 25px; margin: 30px 0; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05); }" +
                ".credentials-title { font-size: 20px; color: #2c3e50; margin-bottom: 20px; font-weight: 600; text-align: center; }" +
                ".credential-item { display: flex; align-items: center; margin-bottom: 15px; padding: 12px; background: white; border-radius: 6px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); }" +
                ".credential-item:last-child { margin-bottom: 0; }" +
                ".credential-icon { font-size: 20px; margin-right: 12px; width: 24px; text-align: center; }" +
                ".credential-label { font-weight: 600; color: #495057; margin-right: 10px; min-width: 120px; }" +
                ".credential-value { font-family: 'Courier New', monospace; background: #f8f9fa; padding: 8px 12px; border-radius: 4px; color: #2c3e50; font-weight: 500; border: 1px solid #e9ecef; }" +
                ".security-notice { background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 8px; padding: 20px; margin: 30px 0; position: relative; }" +
                ".security-notice::before { content: 'üîí'; font-size: 24px; position: absolute; top: 20px; left: 20px; }" +
                ".security-notice p { margin-left: 40px; color: #856404; font-weight: 500; }" +
                ".cta-section { text-align: center; margin: 40px 0; }" +
                ".cta-button { display: inline-block; background: linear-gradient(135deg, #D4A017, #F7E6A3); color: #02052f; padding: 15px 30px; text-decoration: none; border-radius: 50px; font-weight: 600; font-size: 16px; box-shadow: 0 4px 15px rgba(212, 160, 23, 0.3); transition: all 0.3s ease; }" +
                ".footer { background: #02052f; color: #F7E6A3; padding: 30px; text-align: center decyzji;" +
                ".footer p { margin-bottom: 10px; }" +
                ".footer .signature { font-style: italic; margin-top: 20px; color: #bdc3c7; }" +
                ".divider { height: 2px; background: linear-gradient(90deg, #D4A017, #F7E6A3); margin: 30px 0; border-radius: 1px; }" +
                "@media (max-width: 600px) { .email-container { margin: 0; border-radius: 0; } .content { padding: 30px 20px; } .header { padding: 30px 20px; } .credential-item { flex-direction: column; align-items: flex-start; } .credential-label { margin-bottom: 5px; min-width: auto; } }" +
                "</style>" +
                "</head>" +
                "<body>" +
                "<div class=\"email-container\">" +
                "<div class=\"header\">" +
                "<h1>FOODHUB</h1>" +
                "<p>Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi c·ªông ƒë·ªìng ·∫©m th·ª±c tuy·ªát v·ªùi!</p>" +
                "</div>" +
                "<div class=\"content\">" +
                "<p class=\"welcome-message\">" +
                "C·∫£m ∆°n b·∫°n ƒë√£ t·ªõi v·ªõi ch√∫ng t√¥i! Ch√∫ng t√¥i r·∫•t vui m·ª´ng khi b·∫°n tr·ªü th√†nh th√†nh vi√™n m·ªõi c·ªßa FOODHUB." +
                "</p>" +
                "<div class=\"divider\"></div>" +
                "<div class=\"credentials-box\">" +
                "<h3 class=\"credentials-title\">Th√¥ng tin t√†i kho·∫£n c·ªßa b·∫°n</h3>" +
                "<div class=\"credential-item\">" +
                "<span class=\"credential-icon\">üë§</span>" +
                "<span class=\"credential-label\">T√™n t√†i kho·∫£n:</span>" +
                "<span class=\"credential-value\">" + username + "</span>" +
                "</div>" +
                "<div class=\"credential-item\">" +
                "<span class=\"credential-icon\">üîë</span>" +
                "<span class=\"credential-label\">M·∫≠t kh·∫©u:</span>" +
                "<span class=\"credential-value\">" + password + "</span>" +
                "</div>" +
                "</div>" +
                "<div class=\"security-notice\">" +
                "<p><strong>L∆∞u √Ω b·∫£o m·∫≠t:</strong> Vui l√≤ng kh√¥ng chia s·∫ª th√¥ng tin ƒëƒÉng nh·∫≠p n√†y v·ªõi b·∫•t k·ª≥ ai ƒë·ªÉ ƒë·∫£m b·∫£o an to√†n t√†i kho·∫£n c·ªßa b·∫°n.</p>" +
                "</div>" +
                "<div class=\"cta-section\">" +
                "<a href=\"http://localhost:8080/login.html\" class=\"cta-button\">B·∫Øt ƒë·∫ßu kh√°m ph√° FOODHUB</a>" +
                "</div>" +
                "<div class=\"divider\"></div>" +
                "<p style=\"text-align: center; color: #6c757d; font-size: 16px;\">" +
                "Ch√∫c b·∫°n c√≥ nh·ªØng tr·∫£i nghi·ªám tuy·ªát v·ªùi c√πng FOODHUB! üåü" +
                "</p>" +
                "</div>" +
                "<div class=\"footer\">" +
                "<p><strong>C·∫ßn h·ªó tr·ª£?</strong></p>" +
                "<p>Li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email ho·∫∑c hotline ƒë·ªÉ ƒë∆∞·ª£c gi√∫p ƒë·ª° nhanh nh·∫•t.</p>" +
                "<p class=\"signature\">Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© FOODHUB</strong></p>" +
                "</div>" +
                "</div>" +
                "</body>" +
                "</html>";
    }

    private String buildOtpEmailTemplate(String otp) {
        return "<!DOCTYPE html>" +
                "<html lang=\"vi\">" +
                "<head>" +
                "<meta charset=\"UTF-8\">" +
                "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">" +
                "<title>X√°c th·ª±c t√†i kho·∫£n FOODHUB</title>" +
                "<style>" +
                "* { margin: 0; padding: 0; box-sizing: border-box; }" +
                "body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background-color: #f8f9fa; color: #333; line-height: 1.6; }" +
                ".email-container { max-width: 600px; margin: 0 auto; background-color: #ffffff; border-radius: 12px; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); overflow: hidden; }" +
                ".header { background: linear-gradient(135deg, #02052f, #D4A017); color: white; padding: 40px 20px; text-align: center; position: relative; }" +
                ".header::before { content: 'üîë'; font-size: 48px; display: block; margin-bottom: 15px; }" +
                ".header h1 { font-size: 28px; font-weight: 700; margin-bottom: 10px; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); }" +
                ".header p { font-size: 16px; opacity: 0.9; }" +
                ".content { padding: 40px 30px; }" +
                ".otp-box { background: linear-gradient(135deg, #f8f9fa, #e9ecef); border-left: 4px solid #D4A017; border-radius: 8px; padding: 25px; margin: 30px 0; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05); text-align: center; }" +
                ".otp-code { font-family: 'Courier New', monospace; font-size: 32px; color: #2c3e50; background: #F7E6A3; padding: 15px 25px; border-radius: 8px; display: inline-block; margin: 20px 0; letter-spacing: 5px; }" +
                ".security-notice { background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 8px; padding: 20px; margin: 30px 0; position: relative; }" +
                ".security-notice::before { content: 'üîí'; font-size: 24px; position: absolute; top: 20px; left: 20px; }" +
                ".security-notice p { margin-left: 40px; color: #856404; font-weight: 500; }" +
                ".footer { background: #02052f; color: #F7E6A3; padding: 30px; text-align: center; }" +
                ".footer p { margin-bottom: 10px; }" +
                ".footer .signature { font-style: italic; margin-top: 20px; color: #bdc3c7; }" +
                ".divider { height: 2px; background: linear-gradient(90deg, #D4A017, #F7E6A3); margin: 30px 0; border-radius: 1px; }" +
                "@media (max-width: 600px) { .email-container { margin: 0; border-radius: 0; } .content { padding: 30px 20px; } .header { padding: 30px 20px; } .otp-code { font-size: 24px; letter-spacing: 3px; } }" +
                "</style>" +
                "</head>" +
                "<body>" +
                "<div class=\"email-container\">" +
                "<div class=\"header\">" +
                "<h1>FOODHUB</h1>" +
                "<p>X√°c th·ª±c t√†i kho·∫£n c·ªßa b·∫°n</p>" +
                "</div>" +
                "<div class=\"content\">" +
                "<p style=\"font-size: 18px; color: #2c3e50; margin-bottom: 30px; text-align: center;\">" +
                "Vui l√≤ng s·ª≠ d·ª•ng m√£ OTP d∆∞·ªõi ƒë√¢y ƒë·ªÉ x√°c th·ª±c t√†i kho·∫£n c·ªßa b·∫°n. M√£ n√†y c√≥ hi·ªáu l·ª±c trong 5 ph√∫t." +
                "</p>" +
                "<div class=\"divider\"></div>" +
                "<div class=\"otp-box\">" +
                "<h3 style=\"font-size: 20px; color: #2c3e50; margin-bottom: 20px; font-weight: 600;\">M√£ OTP c·ªßa b·∫°n</h3>" +
                "<div class=\"otp-code\">" + otp + "</div>" +
                "</div>" +
                "<div class=\"security-notice\">" +
                "<p><strong>L∆∞u √Ω b·∫£o m·∫≠t:</strong> Kh√¥ng chia s·∫ª m√£ OTP n√†y v·ªõi b·∫•t k·ª≥ ai ƒë·ªÉ ƒë·∫£m b·∫£o an to√†n t√†i kho·∫£n c·ªßa b·∫°n.</p>" +
                "</div>" +
                "<div class=\"divider\"></div>" +
                "<p style=\"text-align: center; color: #6c757d; font-size: 16px;\">" +
                "N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu m√£ n√†y, vui l√≤ng b·ªè qua email n√†y." +
                "</p>" +
                "</div>" +
                "<div class=\"footer\">" +
                "<p><strong>C·∫ßn h·ªó tr·ª£?</strong></p>" +
                "<p>Li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email ho·∫∑c hotline ƒë·ªÉ ƒë∆∞·ª£c gi√∫p ƒë·ª° nhanh nh·∫•t.</p>" +
                "<p class=\"signature\">Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© FOODHUB</strong></p>" +
                "</div>" +
                "</div>" +
                "</body>" +
                "</html>";
    }



    //================================m====h√≥a ƒë∆°n====================================================================


    // S·ª≠ d·ª•ng InvoiceResponse
    public void sendInvoiceEmail(String to, InvoiceResponse invoiceResponse) throws MessagingException {
        MimeMessage message = mailSender.createMimeMessage();
        MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
        log.info("Sending invoice email to: {}", to);

        helper.setTo(to);
        helper.setSubject("H√≥a ƒë∆°n thanh to√°n - Order #" + (invoiceResponse.getOrderId() != null ? invoiceResponse.getOrderId() : "N/A"));

        String htmlContent = buildInvoiceEmailTemplate(invoiceResponse);
        helper.setText(htmlContent, true);

        mailSender.send(message);
    }

    @Async
    public void sendInvoiceEmailAsync(String to, InvoiceResponse invoiceResponse) {
        try {
            log.info("B·∫Øt ƒë·∫ßu g·ª≠i email h√≥a ƒë∆°n ƒë·∫øn {} t·∫°i {}", to, Instant.now());
            sendInvoiceEmail(to, invoiceResponse);
            log.info("K·∫øt th√∫c g·ª≠i email h√≥a ƒë∆°n ƒë·∫øn {} t·∫°i {}", to, Instant.now());
        } catch (MessagingException e) {
            log.error("L·ªói khi g·ª≠i email h√≥a ƒë∆°n ƒë·∫øn {}: {}", to, e.getMessage());
        }
    }

    private String buildInvoiceEmailTemplate(InvoiceResponse invoiceResponse) {
        DecimalFormat df = new DecimalFormat("#,###");
        String orderId = String.valueOf(invoiceResponse.getOrderId() != null ? invoiceResponse.getOrderId() : "N/A");

// L·∫•y th·ªùi gian hi·ªán t·∫°i theo m√∫i gi·ªù Vi·ªát Nam
        ZonedDateTime nowInVietnam = ZonedDateTime.now(ZoneId.of("Asia/Ho_Chi_Minh"));
        String formattedPaymentTime = nowInVietnam.format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss"));

        String tableNumber = invoiceResponse.getTableNumber() != null ? invoiceResponse.getTableNumber() : "N/A";
        String customerName = invoiceResponse.getCustomerName() != null ? invoiceResponse.getCustomerName() : "N/A";
        String amount = invoiceResponse.getAmount() != null ?
                df.format(invoiceResponse.getAmount()) + "‚Ç´" : "N/A";
        String paymentMethod = invoiceResponse.getPaymentMethod() != null ? invoiceResponse.getPaymentMethod() : "N/A";
        String status = invoiceResponse.getStatus() != null ? invoiceResponse.getStatus() : "N/A";
        String transactionId = invoiceResponse.getTransactionId() != null ? invoiceResponse.getTransactionId() : "N/A";

        List<Map<String, Object>> orderItems = invoiceResponse.getOrderItems() != null ? invoiceResponse.getOrderItems() : List.of();
        String itemsHtml = orderItems.stream()
                .map(item -> {
                    String itemName = String.valueOf(item.getOrDefault("itemName", "N/A"));
                    String quantity = String.valueOf(item.getOrDefault("quantity", "N/A"));
                    String price = item.get("price") != null ?
                            df.format(((Number) item.get("price")).doubleValue()) + "‚Ç´" : "N/A";
                    String total = (item.get("price") != null && item.get("quantity") != null) ?
                            df.format(((Number) item.get("price")).doubleValue() * ((Number) item.get("quantity")).doubleValue()) + "‚Ç´" : "N/A";
                    return String.format(
                            "<tr><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>",
                            itemName, quantity, price, total
                    );
                })
                .collect(Collectors.joining());

        return "<!DOCTYPE html>" +
                "<html lang=\"vi\">" +
                "<head>" +
                "<meta charset=\"UTF-8\">" +
                "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">" +
                "<title>H√≥a ƒë∆°n t·ª´ FoodHub</title>" +
                "<style>" +
                "body { font-family: Arial, sans-serif; background-color: #f4f4f4; margin: 0; padding: 0; }" +
                ".container { max-width: 600px; margin: 0 auto; background-color: #fff; padding: 20px; border: 1px solid #e0e0e0; }" +
                ".header { text-align: center; background-color: #ff9800; color: #fff; padding: 10px; }" +
                ".details p { margin: 5px 0; color: #333; }" +
                ".item-table { width: 100%; border-collapse: collapse; margin: 10px 0; }" +
                ".item-table th, .item-table td { border: 1px solid #ddd; padding: 8px; text-align: left; }" +
                ".item-table th { background-color: #ffeb3b; color: #000; }" +
                ".total { font-weight: bold; margin-top: 10px; }" +
                ".footer { text-align: center; color: #757575; font-size: 12px; margin-top: 20px; }" +
                "@media (max-width: 600px) { .container { margin: 0; border-radius: 0; } .item-table { font-size: 14px; } }" +
                "</style>" +
                "</head>" +
                "<body>" +
                "<div class=\"container\">" +
                "<div class=\"header\"><h3>H√≥a ƒë∆°n t·ª´ FoodHub</h3></div>" +
                "<div class=\"details\">" +
                "<p><strong>S·ªë h√≥a ƒë∆°n:</strong> #" + orderId + "</p>" +
                "<p><strong>Ng√†y thanh to√°n:</strong> " + formattedPaymentTime + "</p>" +
                "<p><strong>B√†n:</strong> " + tableNumber + "</p>" +
                "<p><strong>Kh√°ch h√†ng:</strong> " + customerName + "</p>" +
                "</div>" +
                "<table class=\"item-table\">" +
                "<thead><tr><th>T√™n m√≥n ƒÉn</th><th>S·ªë l∆∞·ª£ng</th><th>Gi√° ƒë∆°n v·ªã</th><th>T·ªïng ti·ªÅn</th></tr></thead>" +
                "<tbody>" + itemsHtml + "</tbody>" +
                "</table>" +
                "<div class=\"total\">" +
                "<p><strong>T·ªïng c·ªông:</strong> " + amount + "</p>" +
                "<p><strong>Ph∆∞∆°ng th·ª©c:</strong> " + paymentMethod + "</p>" +
                "<p><strong>Tr·∫°ng th√°i:</strong> " + status + "</p>" +
                "<p><strong>M√£ giao d·ªãch:</strong> " + transactionId + "</p>" +
                "</div>" +
                "<div class=\"footer\">FoodHub - Chuy√™n m√≥n l·∫©u v√† n∆∞·ªõng<br>C·∫£m ∆°n qu√Ω kh√°ch!</div>" +
                "</div>" +
                "</body>" +
                "</html>";
    }
}